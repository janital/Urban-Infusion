{
	"info": {
		"_postman_id": "8142c6c4-8f94-4f90-93d2-8d89577a7ac0",
		"name": "SpringSecurity",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Authenticate as User (Fetch Token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"assertToken\", function() {",
									"    var jsonData = JSON.parse(responseBody);",
									"    pm.collectionVariables.set(\"userToken\", jsonData.token)",
									"    pm.expect(pm.collectionVariables.get(\"userToken\")).eq(jsonData.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"user\",\n\t\"password\": \"1234\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}:{{port}}/login",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate as Admin (Fetch Token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"assertToken\", function() {",
									"    var jsonData = JSON.parse(responseBody);",
									"    pm.collectionVariables.set(\"adminToken\", jsonData.token)",
									"    pm.expect(pm.collectionVariables.get(\"adminToken\")).eq(jsonData.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"admin\",\n\t\"password\": \"1234\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}:{{port}}/login",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate as Owner (Fetch Token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"assertToken\", function() {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.collectionVariables.set(\"ownerToken\", jsonData.token)\r",
									"    pm.expect(pm.collectionVariables.get(\"ownerToken\")).eq(jsonData.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\": \"owner\",\r\n\t\"password\": \"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}:{{port}}/login",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register as User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response code is 200 or 400\", function() {\r",
									"   \r",
									"   if (pm.response.code == 200) {\r",
									"       var jsonData = JSON.parse(responseBody);\r",
									"       pm.collectionVariables.set(\"userToken\", jsonData.token)\r",
									"       pm.response.to.have.status(200);;\r",
									"   } else {\r",
									"       pm.response.to.have.status(400);;\r",
									"   }\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Geir\",\n    \"lastName\": \"Otlo\",\n    \"email\": \"geo@optimar.no\",\n    \"password\": \"geos\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}:{{port}}/register",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user as User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{host}}:{{port}}/users/geo@optimar.no",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"geo@optimar.no"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all users as User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status is 403\", function() {\r",
									"    pm.response.to.have.status(403);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{host}}:{{port}}/users",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{host}}:{{port}}/users/geo@optimar.no",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"geo@optimar.no"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all users as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{host}}:{{port}}/users",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user as Owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function() {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,404]);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ownerToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{host}}:{{port}}/users/geo@optimar.no",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"geo@optimar.no"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "gr03.appdev.cloudns.ph",
			"type": "string"
		},
		{
			"key": "port",
			"value": "8443",
			"type": "string"
		},
		{
			"key": "userToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "adminToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "ownerToken",
			"value": "",
			"type": "string"
		}
	]
}